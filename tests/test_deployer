#!/bin/bash

temporary_folder_tests="/tmp/pulsion/tests"
temporary_local_folder="$temporary_folder_tests/$RANDOM/local"
temporary_config_folder="$temporary_local_folder/config"
temporary_deploy_folder="$temporary_folder_tests/$RANDOM/distant"
tests_config_folder="tests/tmp"
deploy_config_path="tests/config/other/deploy_config"

. tests/include/environment_variable

# Test the deployer
test_deploy_process() {

	# Prepare the test
	initialize_local_folder
	initialize_deploy_folder
	create_temporary_deploy_config_file
	
	# Initialize strings to analyse
	file_to_not_remove="file_to_not_remove"            # 0 occurs
	file_to_remove="* Remove file_to_remove"           # 1 occurs
	ignored_file="ignored_file.php"                    # No occurs
	project_folder="Copy project/"                     # 5 occurs
	git_tracked="tracked_but_not_commit_file.php"      # 1 occurs if config_pulsion_deployer is ok
	git_untracked="untracked_git_file.cpp"             # 1 occurs if config_pulsion_deployer is ok
	pre_action="pre.actions"                           # 1 occurs
	post_action="post.actions"                         # 1 occurs

	# Get all outputs for tests
	output=$($(echo $CONSOLE)_deployer deploy -p tmpProject -v 3 --force)
	local_folder=$(ls -Rah $temporary_local_folder)
	deploy_folder=$(ls -Rah $temporary_deploy_folder)
	config_folder=$(ls -Rah $temporary_config_folder)

	# Test the console output
	assertTrue "'$file_to_remove' must be found" "[ $(echo "$output" | grep -c "$file_to_remove") -eq 1 ]"
	assertTrue "'$pre_action' must be found" "[ $(echo "$output" | grep -c "$pre_action") -ge 1 ]"
	assertTrue "'$ignored_file' must NOT be found" "[ $(echo "$output" | grep -c "$ignored_file") -eq 0 ]"
	assertTrue "'$file_to_not_remove' must NOT be found" "[ $(echo "$output" | grep -c "$file_to_not_remove") -eq 0 ]"
	assertTrue "'$git_tracked' must be found" "[ $(echo "$output" | grep -c "$git_tracked") -eq 1 ]"
	assertTrue "'$git_untracked' must be found" "[ $(echo "$output" | grep -c "$git_untracked") -eq 1 ]"
	assertTrue "'$project_folder' must be found 5 times" "[ $(echo "$output" | grep -c "$project_folder") -eq 5 ]"

	# Test the folders output
	assertTrue "$pre_action must be found in local folder" "[ $(echo "$local_folder" | grep -c "$pre_action") -eq 1 ]"
	assertTrue "$post_action must be found in config folder" "[ $(echo "$config_folder" | grep -c "$post_action") -eq 1 ]"

	# Reset all environment
	remove_folders

}

function initialize_local_folder {

	# Create folder
	mkdir -p $temporary_local_folder
	cd $temporary_local_folder

	# Launch git and gitignore file
	git init > /dev/null
	echo "project/ignored_file.php" > .gitignore

	# Create project files and commit
	mkdir project
	touch project/ignored_file.php
	touch project/view.php
	touch project/controller.php
	touch project/model.php
	mkdir config
	touch config/parameters.yml
	git add .
	git commit -m "Initial commit" > /dev/null
	touch project/tracked_but_not_commit_file.php
	git add .
	touch project/untracked_git_file.cpp

	cd - > /dev/null

}

function create_temporary_deploy_config_file {

	if [ -d $tests_config_folder ]; then
		rm -Rf $tests_config_folder
	fi

	mkdir -p $tests_config_folder
	cp $deploy_config_path $tests_config_folder/deploy_config

	if [[ $(uname -s) == "Darwin" ]]; then
		sed -i '' -e "s|{project}|$temporary_local_folder|g" $tests_config_folder/deploy_config
		sed -i '' -e "s|{config}|$temporary_config_folder|g" $tests_config_folder/deploy_config
		sed -i '' -e "s|{deploy}|$temporary_deploy_folder|g" $tests_config_folder/deploy_config
	else
		sed -i -e "s|{project}|$temporary_local_folder|g" $tests_config_folder/deploy_config
		sed -i -e "s|{config}|$temporary_config_folder|g" $tests_config_folder/deploy_config
		sed -i -e "s|{deploy}|$temporary_deploy_folder|g" $tests_config_folder/deploy_config
	fi


}

function initialize_deploy_folder {

	# Create folder
	mkdir -p $temporary_deploy_folder
	touch $temporary_deploy_folder/file_to_remove
	touch $temporary_deploy_folder/file_to_not_remove

}

function remove_folders {

	rm -Rf $temporary_folder_tests
	rm -Rf $tests_config_folder

}